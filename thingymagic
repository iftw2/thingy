--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
-- Made And Open Sourced By NotUgur 
-- https://discord.gg/3n9BzZvn

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua'))()
local AutoFarmEnabled = false
local AutoStatsEnabled = false
local AutoRebirthEnabled = false
local HEIGHT_OFFSET = 15
local SelectedStat = "Power"
local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RemotePath = ReplicatedStorage:WaitForChild("Universe"):WaitForChild("Network"):WaitForChild("Remotes")


local function multiDamageAllMobs()
    local mobsFolder = game.Workspace:WaitForChild("World"):WaitForChild("Mobs")
    local mobCount = 0
    
    for _, mob in pairs(mobsFolder:GetChildren()) do
        if mob and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
            mobCount = mobCount + 1
            if mobCount > 3 then break end
            
            local args = {
                [1] = mob
            }
            for i = 1, 3 do
                game:GetService("ReplicatedStorage").Universe.Network.Remotes.DamageFire:FireServer(unpack(args))
            end
        end
    end
end

local function isMobAlive(mob)
    return mob and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0
end

local function runAutoStats()
    spawn(function()
        while AutoStatsEnabled do
            local args = {}
            
            if SelectedStat == "Power" then
                args = {
                    [1] = 1, 
                    [2] = 0, 
                    [3] = 0  
                }
            elseif SelectedStat == "Health" then
                args = {
                    [1] = 0, 
                    [2] = 1, 
                    [3] = 0  
                }
            elseif SelectedStat == "Critical" then
                args = {
                    [1] = 0, 
                    [2] = 0, 
                    [3] = 1  
                }
            end

            
            game:GetService("ReplicatedStorage"):WaitForChild("Universe"):WaitForChild("Network"):WaitForChild("Remotes"):WaitForChild("UpgradeStat"):FireServer(unpack(args))
            
            wait(0.1)
        end
    end)
end


local function runAutoRebirth()
    spawn(function()
        while AutoRebirthEnabled do
            game:GetService("ReplicatedStorage").Universe.Network.Remotes.Rebirth:FireServer()
            wait(0.1)
        end
    end)
end


local function checkForMobs()
    local startTime = tick()
    local mobsFound = false
    
    
    while tick() - startTime < 3 do
        local mobsFolder = game.Workspace:WaitForChild("World"):WaitForChild("Mobs")
        
        
        for _, mob in pairs(mobsFolder:GetChildren()) do
            if mob and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                mobsFound = true
                break
            end
        end
        
        if mobsFound then
            break
        end
        
        wait(0.1)
    end
    
    
    if not mobsFound then
        player:Kick("Please Start Dungeon And Try Again")
    end
    
    return mobsFound
end


local function checkDungeonStatus()
    local dungeonInfo = game:GetService("ReplicatedStorage"):WaitForChild("Universe"):WaitForChild("Network"):WaitForChild("Remotes"):WaitForChild("GetDungeonInfo"):InvokeServer()
    
    
    if not dungeonInfo or type(dungeonInfo) == "table" and next(dungeonInfo) == nil then
        player:Kick("Please Start Dungeon And Try Again")
        return false
    end
    
    return true
end


local function AutoFarm()
    spawn(function()
        while AutoFarmEnabled do
            local character = game.Players.LocalPlayer.Character
            if not character then continue end
            
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if not humanoidRootPart then continue end
            
            local mobsFolder = game.Workspace:WaitForChild("World"):WaitForChild("Mobs")
            local mobFound = false
            local MAX_DISTANCE = 50
            
            for _, mob in pairs(mobsFolder:GetChildren()) do
                if mob and mob:FindFirstChild("HumanoidRootPart") and isMobAlive(mob) then
                    local distance = (mob.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude
                    
                    if distance <= MAX_DISTANCE then
                        mobFound = true
                        
                        local targetCFrame = CFrame.new(
                            mob.HumanoidRootPart.Position + Vector3.new(0, HEIGHT_OFFSET, 0)
                        )
                        
                        local tween = TweenService:Create(
                            humanoidRootPart,
                            TweenInfo.new(0.5, Enum.EasingStyle.Linear),
                            {CFrame = targetCFrame}
                        )
                        
                        tween:Play()
                        tween.Completed:Wait()
                        
                        humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
                        humanoidRootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                        
                        multiDamageAllMobs()
                        break
                    end
                end
            end
            
            if not mobFound then
                wait(5)
            else
                wait(0.1)
            end
        end
    end)
end

local Window = Rayfield:CreateWindow({
    Name = "Pixel Slayer Script By NotUgur",
    LoadingTitle = "Pixel Slayer Script By NotUgur",
    LoadingSubtitle = "by NotUgur",
    Discord = {
        Enabled = true,
        Invite = "3n9BzZvn",
        RememberJoins = false
    },
    ConfigurationSaving = {
        Enabled = false,
        FolderName = "FarmConfig",
        FileName = "Config"
    }
})

Rayfield:Notify({
    Title = "Join Discord",
    Content = "https://discord.gg/3n9BzZvn",
    Duration = 10,
    Type = "JoinDiscord"
})


local MainTab = Window:CreateTab("Main", 4483362458)


MainTab:CreateSlider({
    Name = "Height Offset",
    Range = {5, 30},
    Increment = 1,
    Suffix = "Studs",
    CurrentValue = 15,
    Flag = "HeightOffset",
    Callback = function(Value)
        HEIGHT_OFFSET = Value
    end,
})


MainTab:CreateToggle({
    Name = "Auto Farm",
    CurrentValue = false,
    Flag = "AutoFarmToggle",
    Callback = function(Value)
        AutoFarmEnabled = Value
        if Value then
            local character = game.Players.LocalPlayer.Character
            if character then
                local humanoid = character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.PlatformStand = true
                end
            end
            AutoFarm()
        else
            local character = game.Players.LocalPlayer.Character
            if character then
                local humanoid = character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.PlatformStand = false
                end
            end
        end
    end
})


MainTab:CreateDropdown({
    Name = "Stats Priority",
    Options = {"Power", "Health", "Critical"},
    CurrentOption = "Power",
    Flag = "StatsPriority",
    Callback = function(Option)
        SelectedStat = Option
    end
})


MainTab:CreateToggle({
    Name = "Auto Stats",
    CurrentValue = false,
    Flag = "AutoStatsToggle",
    Callback = function(Value)
        AutoStatsEnabled = Value
        if Value then
            runAutoStats()
        end
    end
})


MainTab:CreateToggle({
    Name = "Auto Rebirth",
    CurrentValue = false,
    Flag = "AutoRebirthToggle",
    Callback = function(Value)
        AutoRebirthEnabled = Value
        if Value then
            runAutoRebirth()
        end
    end
})

game.Workspace.ChildAdded:Connect(function(child)
    if child.Name == "World" then
        if AutoFarmEnabled then
            AutoFarm()
        end
    end
end)
